#!/bin/bash
set -e

# Instructions:
#
# This script is a Git pre-commit hook that spell checks any content you are about to commit.
#
# Place this script into the ".git/hooks/" directory in your repository. It must be called "pre-commit" and be
# executable. A Git hook only works in a single repository. You need to copy this hook into every repository you wish to
# use it in manually. Optionally, you can set up a symlink in the ".git/hooks/" directory pointing to the script.
#
# Each time you try to commit something, this script is run and spell checks the content you are committing.
#
# Should you want to bypass the pre-commit hook (though not recommended), you can commit with "git commit --no-verify".


# The following is a text file that represents your custom dictionary; edit as necessary. Add words to it that you wish
# to ignore for the spell check.
dict=~/.git-spell-check
if [ ! -f $dict ]; then
    touch ~/.git-spell-check
    dict=~/.git-spell-check
    echo "Custom dictionary not found. Created ~/.git-spell-check..."
fi


# The following is a temporary dictionary (a binary file) created from the dict text file. It is deleted after the
# script finishes.
temp_dict=$(mktemp --tmpdir docs-dictionary-XXXXXX)

# Language of your doc. When using a non-English language, make sure you have the appropriate aspell libraries
# installed: "yum search aspell". For example, to spell check in Slovak, you must have the aspell-sk package installed.
lang=en

# Clean up if script is interrupted or terminated.
trap "cleanup" SIGINT SIGTERM 

# Prepares the dictionary from scratch in case new words were added since last time.
function prepare_dictionary() {

    aspell --lang="$lang" create master "$temp_dict" < "$dict"

}

# Removes the temporary dictionary.
function cleanup() {

    /bin/rm -f "$temp_dict"

}

# Spell checks content you're about to commit. Writes out words that are misspelled or exits with 0 (i.e. continues with
# commit).
function spell_check() {

    words=$(git diff --cached | grep -e "^+[^+]" | aspell --mode=sgml list --add-sgml-skip={ulink,code,literal,firstname,parameter,option,package,replaceable,programlisting,userinput,screen,filename,command,computeroutput,abbrev,accel,orgname,surname,foreignphrase,acronym,hardware,keycap,systemitem,application} --lang="$lang" --extra-dicts="$temp_dict" | sort | uniq) # add all SGML tags into your custom dictionary if you want to remove the "--add-sgml-skip" option.
    if [ ! "$words" ]; then
	cleanup; exit 0
    fi
    echo "Spell check failed on the following words:"
    echo "-------------------------------------------------"
    for word in ${words}; do
	grep --color=always --exclude-dir={.git,tmp} -Irone "$word" $(git diff --cached --name-only) | awk -F ":" '{print "File: " $1 "\ton line: " $2 "\tTypo: " $3}'
	echo -e "-------------------"
    done

}

# Adds all, some, or none of the misspelled words to the custom dictionary.
function add_words_to_dict() {

    echo -e "
Add any of the misspelled words into your custom dictionary?
  * a[ll]     (add all words into dict, continue with commit)
  * s[ome]    (add some words into dict, fix others, no commit)
  * i[gnore]  (add some words into dict, ignore rest, continue with commit)
  * n[one]    (no commit)
"

    while true; do
	exec < /dev/tty # Simply reading user input does not work because Git hooks have stdin detached.
	read ANSWER
	shopt -s nocasematch
	case "$ANSWER" in
	    a|all)
		add_all
		cleanup; exit 0
		;;
	    s|some)
		add_some
		echo -e "\nPlease fix remaining typos, use \"git add\" to add fixed files, and commit."
		cleanup; exit 1
		;;
	    i|ignore)
		add_some
		cleanup; exit 0
		;;
	    n|none)
		add_none
		cleanup; exit 1
		;;
	    *) 
		echo "Incorrect answer. Try again."
		continue
	esac
	shopt -u nocasematch
    done

}

# Adds all words to the custom dictionary and continues with the commit.
function add_all() {

    for word in $words; do
	echo $word >> "$dict"
    done

}

# Adds some (selected by user) of the words to the dictinary and exits with 1.
function add_some() {

    for word in $words; do
	echo "Do you want to add the following word to your custom dictionary: $word  (y[es] or n[o])"
	while true; do
	    exec < /dev/tty
	    read answer
	    shopt -s nocasematch
	    case "$answer" in
		y|yes)
		    echo $word >> "$dict"
		    echo "\"$word\" added to your custom dictionary."
		    break ;;
		n|no)
		    break ;;
		*) 
		    echo "Incorrect answer. Try again."
		    continue
	    esac
            shopt -u nocasematch
	done
    done

}

# Adds none of the words and exits with 1.
function add_none() {

    echo -e "\nNo words were added to your custom dictionary."
    echo "Please fix remaining typos, use \"git add\" to add fixed files, and commit."

}


prepare_dictionary
spell_check
add_words_to_dict
